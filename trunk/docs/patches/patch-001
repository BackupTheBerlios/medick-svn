Index: libs/action/controller/Base.php
===================================================================
--- libs/action/controller/Base.php	(revision 26)
+++ libs/action/controller/Base.php	(working copy)
@@ -62,7 +62,8 @@
 	protected $template_root;
     /** Template Engine */
 	protected $template;
-
+    /** Flag to indicate that the current action was performed.*/
+    private $action_performed = FALSE;
     /**
      * Will process the request returning the resulting response
      * @param Request request, the request
@@ -79,22 +80,41 @@
     }
 
 	// {{{ render.
-	
-	protected function render($template_name = NULL, $status = NULL) {
+
+    /**
+     * It renders the template name witch can be the name of the curent action.
+     * <code>
+     *  class news_controller extends ActionController {
+     *      public function add {
+     *          // grab some data.        
+     *          $this->render(); // will load the template /app/views/news/add.phtml
+     *      }
+     *  }
+     * </code>
+     * @param string template_name, [optional], the template name, default is null, the curent action.
+     * @param Response::SC_*, status, [optional] status code, default is 200 OK
+     */
+    protected function render($template_name = NULL, $status = NULL) {
 		if (is_null($template_name)) $template_name = $this->params['action'];
 		return $this->render_file($this->template_root . $template_name . '.phtml', $status);
 	}
 	
-	protected function render_file($template_file, $status) {
+    protected function render_file($template_file = NULL, $status = NULL) {
+        if (!is_file($template_file)) throw new Exception ('Cannot render unexistent template file:' . $template_file);
 		$this->logger->debug($template_file);
 		$this->render_text($this->template->render_file($template_file), $status);
 		
 	}
 	
-	protected function render_text($text, $status) {
+    protected function render_text($text, $status = NULL) {
+        if ($this->action_performed) {
+            $this->logger->info('Action already performed...');
+            RETURN;
+        }
         if (is_null($status)) $status = Response::SC_OK;
 		$this->response->setStatus($status);
-		$this->response->setBody($text);
+        $this->response->setBody($text);
+        $this->action_performed = TRUE;
 	}
 	
 	// }}}
@@ -147,7 +167,9 @@
         $this->logger->debug('Incoming action:: ' . strtolower($action_name));
         $action = $this->createMethod(strtolower($action_name));
         if ($action->isStatic()) throw new Exception('Cannot invoke a static method!');
-        return $this->render($action->invoke($this));
+        $action->invoke($this);
+        $this->render();
+        // return $this->render($action->invoke($this));
     }
     
     /**
